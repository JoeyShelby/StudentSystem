package org.joey.pojo;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class GradeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table grade
     *
     * @mbg.generated Wed Sep 07 10:28:19 CST 2022
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table grade
     *
     * @mbg.generated Wed Sep 07 10:28:19 CST 2022
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table grade
     *
     * @mbg.generated Wed Sep 07 10:28:19 CST 2022
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grade
     *
     * @mbg.generated Wed Sep 07 10:28:19 CST 2022
     */
    public GradeExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grade
     *
     * @mbg.generated Wed Sep 07 10:28:19 CST 2022
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grade
     *
     * @mbg.generated Wed Sep 07 10:28:19 CST 2022
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grade
     *
     * @mbg.generated Wed Sep 07 10:28:19 CST 2022
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grade
     *
     * @mbg.generated Wed Sep 07 10:28:19 CST 2022
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grade
     *
     * @mbg.generated Wed Sep 07 10:28:19 CST 2022
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grade
     *
     * @mbg.generated Wed Sep 07 10:28:19 CST 2022
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grade
     *
     * @mbg.generated Wed Sep 07 10:28:19 CST 2022
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grade
     *
     * @mbg.generated Wed Sep 07 10:28:19 CST 2022
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grade
     *
     * @mbg.generated Wed Sep 07 10:28:19 CST 2022
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table grade
     *
     * @mbg.generated Wed Sep 07 10:28:19 CST 2022
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table grade
     *
     * @mbg.generated Wed Sep 07 10:28:19 CST 2022
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andMathTotalIsNull() {
            addCriterion("math_total is null");
            return (Criteria) this;
        }

        public Criteria andMathTotalIsNotNull() {
            addCriterion("math_total is not null");
            return (Criteria) this;
        }

        public Criteria andMathTotalEqualTo(BigDecimal value) {
            addCriterion("math_total =", value, "mathTotal");
            return (Criteria) this;
        }

        public Criteria andMathTotalNotEqualTo(BigDecimal value) {
            addCriterion("math_total <>", value, "mathTotal");
            return (Criteria) this;
        }

        public Criteria andMathTotalGreaterThan(BigDecimal value) {
            addCriterion("math_total >", value, "mathTotal");
            return (Criteria) this;
        }

        public Criteria andMathTotalGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("math_total >=", value, "mathTotal");
            return (Criteria) this;
        }

        public Criteria andMathTotalLessThan(BigDecimal value) {
            addCriterion("math_total <", value, "mathTotal");
            return (Criteria) this;
        }

        public Criteria andMathTotalLessThanOrEqualTo(BigDecimal value) {
            addCriterion("math_total <=", value, "mathTotal");
            return (Criteria) this;
        }

        public Criteria andMathTotalIn(List<BigDecimal> values) {
            addCriterion("math_total in", values, "mathTotal");
            return (Criteria) this;
        }

        public Criteria andMathTotalNotIn(List<BigDecimal> values) {
            addCriterion("math_total not in", values, "mathTotal");
            return (Criteria) this;
        }

        public Criteria andMathTotalBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("math_total between", value1, value2, "mathTotal");
            return (Criteria) this;
        }

        public Criteria andMathTotalNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("math_total not between", value1, value2, "mathTotal");
            return (Criteria) this;
        }

        public Criteria andJavaTotalIsNull() {
            addCriterion("Java_total is null");
            return (Criteria) this;
        }

        public Criteria andJavaTotalIsNotNull() {
            addCriterion("Java_total is not null");
            return (Criteria) this;
        }

        public Criteria andJavaTotalEqualTo(BigDecimal value) {
            addCriterion("Java_total =", value, "javaTotal");
            return (Criteria) this;
        }

        public Criteria andJavaTotalNotEqualTo(BigDecimal value) {
            addCriterion("Java_total <>", value, "javaTotal");
            return (Criteria) this;
        }

        public Criteria andJavaTotalGreaterThan(BigDecimal value) {
            addCriterion("Java_total >", value, "javaTotal");
            return (Criteria) this;
        }

        public Criteria andJavaTotalGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("Java_total >=", value, "javaTotal");
            return (Criteria) this;
        }

        public Criteria andJavaTotalLessThan(BigDecimal value) {
            addCriterion("Java_total <", value, "javaTotal");
            return (Criteria) this;
        }

        public Criteria andJavaTotalLessThanOrEqualTo(BigDecimal value) {
            addCriterion("Java_total <=", value, "javaTotal");
            return (Criteria) this;
        }

        public Criteria andJavaTotalIn(List<BigDecimal> values) {
            addCriterion("Java_total in", values, "javaTotal");
            return (Criteria) this;
        }

        public Criteria andJavaTotalNotIn(List<BigDecimal> values) {
            addCriterion("Java_total not in", values, "javaTotal");
            return (Criteria) this;
        }

        public Criteria andJavaTotalBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("Java_total between", value1, value2, "javaTotal");
            return (Criteria) this;
        }

        public Criteria andJavaTotalNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("Java_total not between", value1, value2, "javaTotal");
            return (Criteria) this;
        }

        public Criteria andEnglishTotalIsNull() {
            addCriterion("english_total is null");
            return (Criteria) this;
        }

        public Criteria andEnglishTotalIsNotNull() {
            addCriterion("english_total is not null");
            return (Criteria) this;
        }

        public Criteria andEnglishTotalEqualTo(BigDecimal value) {
            addCriterion("english_total =", value, "englishTotal");
            return (Criteria) this;
        }

        public Criteria andEnglishTotalNotEqualTo(BigDecimal value) {
            addCriterion("english_total <>", value, "englishTotal");
            return (Criteria) this;
        }

        public Criteria andEnglishTotalGreaterThan(BigDecimal value) {
            addCriterion("english_total >", value, "englishTotal");
            return (Criteria) this;
        }

        public Criteria andEnglishTotalGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("english_total >=", value, "englishTotal");
            return (Criteria) this;
        }

        public Criteria andEnglishTotalLessThan(BigDecimal value) {
            addCriterion("english_total <", value, "englishTotal");
            return (Criteria) this;
        }

        public Criteria andEnglishTotalLessThanOrEqualTo(BigDecimal value) {
            addCriterion("english_total <=", value, "englishTotal");
            return (Criteria) this;
        }

        public Criteria andEnglishTotalIn(List<BigDecimal> values) {
            addCriterion("english_total in", values, "englishTotal");
            return (Criteria) this;
        }

        public Criteria andEnglishTotalNotIn(List<BigDecimal> values) {
            addCriterion("english_total not in", values, "englishTotal");
            return (Criteria) this;
        }

        public Criteria andEnglishTotalBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("english_total between", value1, value2, "englishTotal");
            return (Criteria) this;
        }

        public Criteria andEnglishTotalNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("english_total not between", value1, value2, "englishTotal");
            return (Criteria) this;
        }

        public Criteria andPeTotalIsNull() {
            addCriterion("PE_total is null");
            return (Criteria) this;
        }

        public Criteria andPeTotalIsNotNull() {
            addCriterion("PE_total is not null");
            return (Criteria) this;
        }

        public Criteria andPeTotalEqualTo(BigDecimal value) {
            addCriterion("PE_total =", value, "peTotal");
            return (Criteria) this;
        }

        public Criteria andPeTotalNotEqualTo(BigDecimal value) {
            addCriterion("PE_total <>", value, "peTotal");
            return (Criteria) this;
        }

        public Criteria andPeTotalGreaterThan(BigDecimal value) {
            addCriterion("PE_total >", value, "peTotal");
            return (Criteria) this;
        }

        public Criteria andPeTotalGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("PE_total >=", value, "peTotal");
            return (Criteria) this;
        }

        public Criteria andPeTotalLessThan(BigDecimal value) {
            addCriterion("PE_total <", value, "peTotal");
            return (Criteria) this;
        }

        public Criteria andPeTotalLessThanOrEqualTo(BigDecimal value) {
            addCriterion("PE_total <=", value, "peTotal");
            return (Criteria) this;
        }

        public Criteria andPeTotalIn(List<BigDecimal> values) {
            addCriterion("PE_total in", values, "peTotal");
            return (Criteria) this;
        }

        public Criteria andPeTotalNotIn(List<BigDecimal> values) {
            addCriterion("PE_total not in", values, "peTotal");
            return (Criteria) this;
        }

        public Criteria andPeTotalBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PE_total between", value1, value2, "peTotal");
            return (Criteria) this;
        }

        public Criteria andPeTotalNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PE_total not between", value1, value2, "peTotal");
            return (Criteria) this;
        }

        public Criteria andMathAverageIsNull() {
            addCriterion("math_average is null");
            return (Criteria) this;
        }

        public Criteria andMathAverageIsNotNull() {
            addCriterion("math_average is not null");
            return (Criteria) this;
        }

        public Criteria andMathAverageEqualTo(BigDecimal value) {
            addCriterion("math_average =", value, "mathAverage");
            return (Criteria) this;
        }

        public Criteria andMathAverageNotEqualTo(BigDecimal value) {
            addCriterion("math_average <>", value, "mathAverage");
            return (Criteria) this;
        }

        public Criteria andMathAverageGreaterThan(BigDecimal value) {
            addCriterion("math_average >", value, "mathAverage");
            return (Criteria) this;
        }

        public Criteria andMathAverageGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("math_average >=", value, "mathAverage");
            return (Criteria) this;
        }

        public Criteria andMathAverageLessThan(BigDecimal value) {
            addCriterion("math_average <", value, "mathAverage");
            return (Criteria) this;
        }

        public Criteria andMathAverageLessThanOrEqualTo(BigDecimal value) {
            addCriterion("math_average <=", value, "mathAverage");
            return (Criteria) this;
        }

        public Criteria andMathAverageIn(List<BigDecimal> values) {
            addCriterion("math_average in", values, "mathAverage");
            return (Criteria) this;
        }

        public Criteria andMathAverageNotIn(List<BigDecimal> values) {
            addCriterion("math_average not in", values, "mathAverage");
            return (Criteria) this;
        }

        public Criteria andMathAverageBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("math_average between", value1, value2, "mathAverage");
            return (Criteria) this;
        }

        public Criteria andMathAverageNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("math_average not between", value1, value2, "mathAverage");
            return (Criteria) this;
        }

        public Criteria andJavaAverageIsNull() {
            addCriterion("Java_average is null");
            return (Criteria) this;
        }

        public Criteria andJavaAverageIsNotNull() {
            addCriterion("Java_average is not null");
            return (Criteria) this;
        }

        public Criteria andJavaAverageEqualTo(BigDecimal value) {
            addCriterion("Java_average =", value, "javaAverage");
            return (Criteria) this;
        }

        public Criteria andJavaAverageNotEqualTo(BigDecimal value) {
            addCriterion("Java_average <>", value, "javaAverage");
            return (Criteria) this;
        }

        public Criteria andJavaAverageGreaterThan(BigDecimal value) {
            addCriterion("Java_average >", value, "javaAverage");
            return (Criteria) this;
        }

        public Criteria andJavaAverageGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("Java_average >=", value, "javaAverage");
            return (Criteria) this;
        }

        public Criteria andJavaAverageLessThan(BigDecimal value) {
            addCriterion("Java_average <", value, "javaAverage");
            return (Criteria) this;
        }

        public Criteria andJavaAverageLessThanOrEqualTo(BigDecimal value) {
            addCriterion("Java_average <=", value, "javaAverage");
            return (Criteria) this;
        }

        public Criteria andJavaAverageIn(List<BigDecimal> values) {
            addCriterion("Java_average in", values, "javaAverage");
            return (Criteria) this;
        }

        public Criteria andJavaAverageNotIn(List<BigDecimal> values) {
            addCriterion("Java_average not in", values, "javaAverage");
            return (Criteria) this;
        }

        public Criteria andJavaAverageBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("Java_average between", value1, value2, "javaAverage");
            return (Criteria) this;
        }

        public Criteria andJavaAverageNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("Java_average not between", value1, value2, "javaAverage");
            return (Criteria) this;
        }

        public Criteria andEnglishAverageIsNull() {
            addCriterion("english_average is null");
            return (Criteria) this;
        }

        public Criteria andEnglishAverageIsNotNull() {
            addCriterion("english_average is not null");
            return (Criteria) this;
        }

        public Criteria andEnglishAverageEqualTo(BigDecimal value) {
            addCriterion("english_average =", value, "englishAverage");
            return (Criteria) this;
        }

        public Criteria andEnglishAverageNotEqualTo(BigDecimal value) {
            addCriterion("english_average <>", value, "englishAverage");
            return (Criteria) this;
        }

        public Criteria andEnglishAverageGreaterThan(BigDecimal value) {
            addCriterion("english_average >", value, "englishAverage");
            return (Criteria) this;
        }

        public Criteria andEnglishAverageGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("english_average >=", value, "englishAverage");
            return (Criteria) this;
        }

        public Criteria andEnglishAverageLessThan(BigDecimal value) {
            addCriterion("english_average <", value, "englishAverage");
            return (Criteria) this;
        }

        public Criteria andEnglishAverageLessThanOrEqualTo(BigDecimal value) {
            addCriterion("english_average <=", value, "englishAverage");
            return (Criteria) this;
        }

        public Criteria andEnglishAverageIn(List<BigDecimal> values) {
            addCriterion("english_average in", values, "englishAverage");
            return (Criteria) this;
        }

        public Criteria andEnglishAverageNotIn(List<BigDecimal> values) {
            addCriterion("english_average not in", values, "englishAverage");
            return (Criteria) this;
        }

        public Criteria andEnglishAverageBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("english_average between", value1, value2, "englishAverage");
            return (Criteria) this;
        }

        public Criteria andEnglishAverageNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("english_average not between", value1, value2, "englishAverage");
            return (Criteria) this;
        }

        public Criteria andPeAverageIsNull() {
            addCriterion("PE_average is null");
            return (Criteria) this;
        }

        public Criteria andPeAverageIsNotNull() {
            addCriterion("PE_average is not null");
            return (Criteria) this;
        }

        public Criteria andPeAverageEqualTo(BigDecimal value) {
            addCriterion("PE_average =", value, "peAverage");
            return (Criteria) this;
        }

        public Criteria andPeAverageNotEqualTo(BigDecimal value) {
            addCriterion("PE_average <>", value, "peAverage");
            return (Criteria) this;
        }

        public Criteria andPeAverageGreaterThan(BigDecimal value) {
            addCriterion("PE_average >", value, "peAverage");
            return (Criteria) this;
        }

        public Criteria andPeAverageGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("PE_average >=", value, "peAverage");
            return (Criteria) this;
        }

        public Criteria andPeAverageLessThan(BigDecimal value) {
            addCriterion("PE_average <", value, "peAverage");
            return (Criteria) this;
        }

        public Criteria andPeAverageLessThanOrEqualTo(BigDecimal value) {
            addCriterion("PE_average <=", value, "peAverage");
            return (Criteria) this;
        }

        public Criteria andPeAverageIn(List<BigDecimal> values) {
            addCriterion("PE_average in", values, "peAverage");
            return (Criteria) this;
        }

        public Criteria andPeAverageNotIn(List<BigDecimal> values) {
            addCriterion("PE_average not in", values, "peAverage");
            return (Criteria) this;
        }

        public Criteria andPeAverageBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PE_average between", value1, value2, "peAverage");
            return (Criteria) this;
        }

        public Criteria andPeAverageNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PE_average not between", value1, value2, "peAverage");
            return (Criteria) this;
        }

        public Criteria andTotalIsNull() {
            addCriterion("total is null");
            return (Criteria) this;
        }

        public Criteria andTotalIsNotNull() {
            addCriterion("total is not null");
            return (Criteria) this;
        }

        public Criteria andTotalEqualTo(BigDecimal value) {
            addCriterion("total =", value, "total");
            return (Criteria) this;
        }

        public Criteria andTotalNotEqualTo(BigDecimal value) {
            addCriterion("total <>", value, "total");
            return (Criteria) this;
        }

        public Criteria andTotalGreaterThan(BigDecimal value) {
            addCriterion("total >", value, "total");
            return (Criteria) this;
        }

        public Criteria andTotalGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("total >=", value, "total");
            return (Criteria) this;
        }

        public Criteria andTotalLessThan(BigDecimal value) {
            addCriterion("total <", value, "total");
            return (Criteria) this;
        }

        public Criteria andTotalLessThanOrEqualTo(BigDecimal value) {
            addCriterion("total <=", value, "total");
            return (Criteria) this;
        }

        public Criteria andTotalIn(List<BigDecimal> values) {
            addCriterion("total in", values, "total");
            return (Criteria) this;
        }

        public Criteria andTotalNotIn(List<BigDecimal> values) {
            addCriterion("total not in", values, "total");
            return (Criteria) this;
        }

        public Criteria andTotalBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("total between", value1, value2, "total");
            return (Criteria) this;
        }

        public Criteria andTotalNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("total not between", value1, value2, "total");
            return (Criteria) this;
        }

        public Criteria andTotalAverageIsNull() {
            addCriterion("total_average is null");
            return (Criteria) this;
        }

        public Criteria andTotalAverageIsNotNull() {
            addCriterion("total_average is not null");
            return (Criteria) this;
        }

        public Criteria andTotalAverageEqualTo(BigDecimal value) {
            addCriterion("total_average =", value, "totalAverage");
            return (Criteria) this;
        }

        public Criteria andTotalAverageNotEqualTo(BigDecimal value) {
            addCriterion("total_average <>", value, "totalAverage");
            return (Criteria) this;
        }

        public Criteria andTotalAverageGreaterThan(BigDecimal value) {
            addCriterion("total_average >", value, "totalAverage");
            return (Criteria) this;
        }

        public Criteria andTotalAverageGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("total_average >=", value, "totalAverage");
            return (Criteria) this;
        }

        public Criteria andTotalAverageLessThan(BigDecimal value) {
            addCriterion("total_average <", value, "totalAverage");
            return (Criteria) this;
        }

        public Criteria andTotalAverageLessThanOrEqualTo(BigDecimal value) {
            addCriterion("total_average <=", value, "totalAverage");
            return (Criteria) this;
        }

        public Criteria andTotalAverageIn(List<BigDecimal> values) {
            addCriterion("total_average in", values, "totalAverage");
            return (Criteria) this;
        }

        public Criteria andTotalAverageNotIn(List<BigDecimal> values) {
            addCriterion("total_average not in", values, "totalAverage");
            return (Criteria) this;
        }

        public Criteria andTotalAverageBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("total_average between", value1, value2, "totalAverage");
            return (Criteria) this;
        }

        public Criteria andTotalAverageNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("total_average not between", value1, value2, "totalAverage");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table grade
     *
     * @mbg.generated do_not_delete_during_merge Wed Sep 07 10:28:19 CST 2022
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table grade
     *
     * @mbg.generated Wed Sep 07 10:28:19 CST 2022
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}